<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="836" height="494" creationComplete="init()" title="DMV Plot">
	<mx:Button x="10" y="422" label="Close" click="closePlot()" toolTip="Close Window (remove it from saved plots if it is saved)"/>
	<mx:Button x="67" y="422" label="Hide" id="hideButton" toolTip="Hide window, so you can restore it later" click="hidePlot()"/>
	<mx:LineChart x="126" y="10" id="linechart" width="680" height="434" dataProvider="{_plotData}" showDataTips="true">
		
		<mx:horizontalAxis>
			<mx:CategoryAxis categoryField="condition" dataProvider="{_plotData}"/>
		</mx:horizontalAxis>
	</mx:LineChart>
	<mx:Legend dataProvider="{linechart}"/>


	<mx:Script>
		<![CDATA[
			import org.systemsbiology.echidna.events.ClosePlotEvent;
			import org.systemsbiology.echidna.events.HidePlotEvent;
			import mx.charts.renderers.CircleItemRenderer;
			import com.adobe.serialization.json.JSON;
			import mx.charts.series.LineSeries;
			import mx.charts.chartClasses.Series;
			import mx.collections.ArrayCollection;
			import mx.managers.PopUpManager;
			
			[Bindable]
			protected var _plotData:ArrayCollection = new ArrayCollection();
			
			public var geneOrder:Array;
			
			public var uniqueID:String;
			
			public function init():void {
			}
			
			
			public function set plotData(value:Array):void {
		     var arrayOfSeries:Array = new Array();
		     var tmpAC:ArrayCollection = new ArrayCollection();
		     
		     for (var i:int = 0; i < geneOrder.length; i++) {
		     	var series:LineSeries = new LineSeries();
		     	series.setStyle("itemRenderer", new ClassFactory(mx.charts.renderers.CircleItemRenderer));
		     	series.yField = geneOrder[i];
		     	series.displayName = geneOrder[i];
		     	arrayOfSeries.push(series);
		     }
		     linechart.series = arrayOfSeries;
		     
		     for (var x:int = 0; x < value.length; x++) {
		     	tmpAC.addItem(value[x]);
		     }
		     _plotData = tmpAC;
			}
			
			public function setPosition(point:Point):void {
				this.x = point.x;
				this.y = point.y;
			}
			
			public function hidePlot():void {
				var evt:HidePlotEvent = new HidePlotEvent(HidePlotEvent.HIDE_PLOT_EVENT);
				evt.plot = this;
				PopUpManager.removePopUp(this); // ? 
				dispatchEvent(evt);
			}
			
			protected function closePlot():void {
				var evt:ClosePlotEvent = new ClosePlotEvent(ClosePlotEvent.CLOSE_PLOT_EVENT);
				evt.plot = this;
				PopUpManager.removePopUp(this);
				dispatchEvent(evt);
			}
			
			
		]]>
	</mx:Script>
	
</mx:TitleWindow>
