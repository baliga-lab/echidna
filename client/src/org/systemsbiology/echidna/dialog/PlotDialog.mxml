<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="836" height="494" creationComplete="init()" showCloseButton="true"
	close="PopUpManager.removePopUp(this)" title="DMV Plot">
	<mx:Button x="10" y="422" label="OK" click="PopUpManager.removePopUp(this)"/>
	<mx:LineChart x="93" y="10" id="linechart" width="680" height="434" dataProvider="{_plotData}" showDataTips="true">
		<!--
		<mx:verticalAxis>
			<mx:CategoryAxis categoryField="value"/>
		</mx:verticalAxis>
		-->
		
		<mx:horizontalAxis>
			<mx:CategoryAxis categoryField="condition" dataProvider="{_plotData}"/>
		</mx:horizontalAxis>
		<!--
		<mx:series>
           <mx:LineSeries 
                yField="gene1"
                displayName="gene1" 
           />
           <mx:LineSeries 
                yField="gene2"
                displayName="gene2"
           />
        </mx:series>
        -->
	</mx:LineChart>
	<mx:Legend dataProvider="{linechart}"/>


	<mx:Script>
		<![CDATA[
			import com.adobe.serialization.json.JSON;
			import mx.charts.series.LineSeries;
			import mx.charts.chartClasses.Series;
			import mx.collections.ArrayCollection;
			import mx.managers.PopUpManager;
			
			[Bindable]
			protected var _plotData:ArrayCollection = new ArrayCollection();
			
			protected var gridData:Array;
			public var geneOrder:Array;
			
			public function init():void {
				/*
			 _plotData = new ArrayCollection([
		        {"condition":"c1", "gene1":1500, "gene2": 3000},
		        {"condition":"c2", "gene1":200, "gene2":400},
		        {"condition":"c3", "gene1":500, "gene2":1000},
		        {"condition":"c4", "gene1":700, "gene2":1400}
		     ]);
		     var geneOrder:Array = new Array();
		     geneOrder.push("gene1");
		     geneOrder.push("gene2");
		     
		     var arrayOfSeries:Array = new Array();
		     
		     for (var i:int = 0; i < geneOrder.length; i++) {
		     	trace("i = " + i);
		     	var series:LineSeries = new LineSeries();
		     	series.yField = geneOrder[i];
		     	series.displayName = geneOrder[i];
		     	arrayOfSeries.push(series);
		     }
		     linechart.series = arrayOfSeries;
		     
				trace("init0");
				*/
			}
			
			
			public function set plotData(value:Array):void {
		     var arrayOfSeries:Array = new Array();
		     var tmpAC:ArrayCollection = new ArrayCollection();
		     
		     for (var i:int = 0; i < geneOrder.length; i++) {
		     	trace("i = " + i);
		     	var series:LineSeries = new LineSeries();
		     	series.yField = geneOrder[i];
		     	series.displayName = geneOrder[i];
		     	arrayOfSeries.push(series);
		     }
		     linechart.series = arrayOfSeries;
		     
		     for (var x:int = 0; x < value.length; x++) {
		     	tmpAC.addItem(value[x]);
		     }
		     _plotData = tmpAC;
		     
				
				
				
				
				/*
				//REMOVE
				if (true) return;
				trace("in set plotData");
				gridData = value;//?
				var json:String = JSON.encode(gridData);
				var columnsAsJson:String = JSON.encode(columns);
				trace("grid data:\n" + json);
				trace("grid data length = " + gridData.length);
				trace("columns: " + columnsAsJson);
				var arrayOfSeries:Array = new Array();
				var rows:ArrayCollection = new ArrayCollection();
				for (var i:int = 0; i < gridData.length; i++) {
					var row:Array = new Array();
					for(var j:int = 1; j < columns.length; j++) {
						var o:Object = new Object();
						o['gene'] = gridData[i]['gene'];
						trace("gene: " + o['gene']);
						var condition:String = columns[j];
						o['condition'] = condition;
						trace("condition = " + condition);
						o['value'] = gridData[i][condition];
						trace("value = " + o['value']);
						trace();
						row.push(o);
					}
					rows.addItem(row);
					var series:LineSeries = new LineSeries();
					//trace("gene  = " + gridData[i]['gene']);
					//series.yField = gridData[i]['gene'];
					series.yField = 'value';
					series.displayName = gridData[i]['gene'];
					//series.yField = 'gene';
					series.xField = 'value';
					//linechart.series.push(series);
					arrayOfSeries.push(series);
					//_plotData.addItem(gridData[i]);
				}
				_plotData = rows;
				linechart.series = arrayOfSeries.reverse(); // will this match?
				validateNow();
				validateDisplayList();
				trace("# of series is " + linechart.series.length + " + rows  = " + _plotData.length);
				*/
			}
			
			
		]]>
	</mx:Script>
	
</mx:TitleWindow>
