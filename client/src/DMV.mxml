<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" backgroundColor="white" pageTitle="DMV"
	applicationComplete="init()" xmlns:bridge="bridge.*">
	<mx:DataGrid id="dmvGrid" x="90" y="184" width="670" height="211" dataProvider="{dmvData}" allowMultipleSelection="true" sortableColumns="false"
		itemClick="gridClick(event)" change="dmvSelectionChanged(event)">
	</mx:DataGrid>
	<bridge:FABridge bridgeName="flex"/>
	<mx:Script>
	
		
		<![CDATA[
			import org.systemsbiology.echidna.events.DMVSelectionChangedEvent;
			import mx.events.ListEvent;
			import mx.events.ItemClickEvent;
			import com.adobe.serialization.json.JSON;
			import mx.rpc.events.ResultEvent;
			import org.systemsbiology.echidna.common.Util;
			import org.systemsbiology.echidna.ui.checkboxColumns.CheckBoxItemRenderer;
			import org.systemsbiology.echidna.ui.checkboxColumns.CheckBoxHeaderRenderer;
			import org.systemsbiology.echidna.ui.checkboxColumns.CheckBoxHeaderColumn;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.collections.ArrayCollection;

			[Bindable]
			protected var dmvData:ArrayCollection = new ArrayCollection();



			protected function init():void {
				loadingLabel.text = "Loading data...";
				
				Util.ajax('main/get_data',{'group_id' : 1, 'data_type' : 'ratio'}, onGotData, Util.ajaxFault);
			}
			
			protected function gridClick(event:ListEvent):void {
				var obj:Object = dmvGrid.selectedItem;
				for (var s:String in obj) {
					trace(s + ": " + obj[s]);
				}
				trace("");
			}
			
			protected function dmvSelectionChanged(event:ListEvent):void {
				var evt:DMVSelectionChangedEvent = new DMVSelectionChangedEvent(DMVSelectionChangedEvent.DMV_SELECTION_CHANGED_EVENT);
				evt.message = "There are " + dmvGrid.selectedItems.length + " items selected.";
				dispatchEvent(evt);
			}
			
			protected function clearSelections():void {
				dmvGrid.selectedItems = new Array();
				dmvSelectionChanged(null);
			}
			
			protected function onGotData(event:ResultEvent):void {
				dmvData = new ArrayCollection();
				
				var rawObj:Object = JSON.decode(event.result.toString());
				var columns:Array = rawObj['columns'];
				addDataGridColumn('gene','Gene');
				var colHash:Dictionary = new Dictionary();
				for (var c:int = 0; c < columns.length; c++) {
					addDataGridColumn(columns[c],columns[c]);
					colHash[c] = columns[c];
				}
				
				
				 
				var rows:Array = rawObj['rows'];
				
				for (var i:int = 0; i < rows.length; i++) {
					var curRow:Array = rows[i];
					var tableItem:Object = new Object();
					
					for (var j:int = 0; j < curRow.length; j++) {
						var item:Object = curRow[j];
						//tableItem['value'] = item['v'];
						tableItem['gene'] = item['g'];
						tableItem[colHash[item['c']]] = item['v'];
						/* 
						for (var x:int = 0; x < columns.length; x++) {
							tableItem[columns[x]] = item['v'];
						}
						*/
					}
					dmvData.addItem(tableItem);
				}
				loadingLabel.text = "";
				trace("dmvData size = " + dmvData.length);
			}
			
			
			 private function addDataGridColumn(dataField:String, headerText:String):void {
			 	var dgc:DataGridColumn = new DataGridColumn(dataField);
			 	dgc.headerText = headerText;
			 	
                //var dgc:CheckBoxHeaderColumn = new CheckBoxHeaderColumn(dataField);
                //dgc.itemRenderer=  new ClassFactory(CheckBoxItemRenderer);
                //dgc.headerRenderer = new ClassFactory(CheckBoxHeaderRenderer);
                //dgc.headerText = dataField;
                //dgc.dataField = dataField;
                var cols:Array = dmvGrid.columns;
                cols.push(dgc);
                dmvGrid.columns = cols;
            }
            
            private function onShow():void {
            	for (var i:int = 0; i < dmvGrid.columnCount; i++) {
            		trace("column " + i + ": " + dmvGrid.columns[i].dataField);
            	}
            }
            
            protected function testEventButtonClicked():void {
            	var evt:DMVSelectionChangedEvent = new DMVSelectionChangedEvent(DMVSelectionChangedEvent.DMV_SELECTION_CHANGED_EVENT);
            	evt.message = "hello from flex";
            	dispatchEvent(evt);
            }

		]]>
	</mx:Script>
	<mx:Label x="90" y="403" text="Number of selected rows:" width="149"/>
	<mx:Text x="247" y="403" width="39" id="numSelectedRowsText" text="{dmvGrid.selectedItems.length}"/>
	<mx:Label x="430" y="403" width="131" id="loadingLabel"/>
	<mx:Button x="306" y="401" label="Clear Selections" id="clearSelectionsButton" click="clearSelections()"/>
	
</mx:Application>
